{
  "swagger": "2.0",
  "info": {
    "description": "This API is used to maintain schedule event store. [to update on \"Authorization\"].",
    "version": "0.0.12",
    "title": "Test.Store.Fruit"
  },
  "host": "10.251.54.245",
  "basePath": "/api/v1/test-store/fruit",
  "tags": [
    {
      "name": "Fruit Store",
      "description": "Store for fruits"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/fruit": {
      "get": {
        "tags": [
          "Fruit Store"
        ],
        "summary": "Obtain all fruits stored in fruit store (fridge)",
        "description": "<b>Method that is used to return a collection of fruit(s) retrieved from the store.</b>",
        "operationId": "getFruit",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Document is read successfully.",
            "schema": {
              "type": "array",
              "fruit": {
                "$ref": "#/definitions/FruitModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized. The OAuth2 token or scope is invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Document or path is not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Document validation is failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Process request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "502": {
            "description": "Microservice has timeout, please retry.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "An error is occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "scs_auth": [
              "platform",
              "platform.readonly"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Fruit Store"
        ],
        "summary": "Add new fruit(s) to the store.",
        "description": "<b>Method that is used to insert one or more fruit(s) into store.</b>",
        "operationId": "addFruit",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fruit",
            "description": "Information for the fruit to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FruitModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Event is created successfully. ***This response applicable to internal request only.***",
            "schema": {
              "$ref": "#/definitions/FruitModel"
            }
          },
          "202": {
            "description": "Request is accepted successfully."
          },
          "401": {
            "description": "Unauthorized. The OAuth2 token or scope is invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Document or path is not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Document validation is failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Process request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "502": {
            "description": "Microservice has timeout, please retry.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "An error is occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "scs_auth": [
              "platform",
              "platform.readonly"
            ]
          }
        ]
      }
    },
    "/fruit/{fruitId}": {
      "get": {
        "tags": [
          "Fruit Store"
        ],
        "summary": "Find an fruit by ID from the store.",
        "description": "<b>Method that is used to return a fruit from the store by matching ID.</b>",
        "operationId": "getFruitById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fruitId",
            "in": "path",
            "description": "The ID of the fruit to return. <h3>Use Cases</h3> <ul> <li>Sample Request Body to retrieve a specific fruit data.</li> [to update]\n </ul>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Document is read successfully.",
            "schema": {
              "$ref": "#/definitions/FruitModel"
            }
          },
          "401": {
            "description": "Unauthorized. The OAuth2 token or scope is invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Document or path is not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Process request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "502": {
            "description": "Microservice has timeout, please retry.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "An error is occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "scs_auth": [
              "platform",
              "platform.readonly"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Fruit Store"
        ],
        "summary": "Remove a fruit from the store.",
        "description": "<b>Method that is used to delete one fruit in the store by the matching ID.</b>",
        "operationId": "deleteFruitById",
        "parameters": [
          {
            "name": "fruitId",
            "in": "path",
            "description": "The ID of the fruit to be deleted.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Request is accepted successfully."
          },
          "204": {
            "description": "Event is deleted successfully. ***This response applicable to internal request only.***"
          },
          "401": {
            "description": "Unauthorized. The OAuth2 token or scope is invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Document or path is not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Document validation is failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Process request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "502": {
            "description": "Microservice has timeout, please retry.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "An error is occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "scs_auth": [
              "platform",
              "platform.readonly"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Fruit Store"
        ],
        "summary": "Patch a fruit in the store with form data.",
        "description": "<b>Method that is used to update a fruit data in the store by the matching ID.</b>",
        "operationId": "patchFruitById",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "name": "fruitId",
            "in": "path",
            "description": "The ID of the fruit that needs to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "<h3>Use Cases</h3>  <ul> \n  <li>\n    <div>\n    <p>Sample Request Body to update fruit data</p>\n    </ul>  <p><strong>Please refer to the [Model] section for more information of each attribute of the fruit model.</strong></p> <br/>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FruitModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event is patched successfully. ***This response applicable to internal request only.***",
            "schema": {
              "$ref": "#/definitions/FruitModel"
            }
          },
          "202": {
            "description": "Request is accepted successfully."
          },
          "401": {
            "description": "Unauthorized. The OAuth2 token or scope is invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Document or path is not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Document validation is failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Process request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "502": {
            "description": "Microservice has timeout, please retry.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "An error is occurred.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "scs_auth": [
              "platform",
              "platform.readonly"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "scs_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://10.251.54.245/identity/connect/authorize",
      "tokenUrl": "http://10.251.54.245/identity/connect/token",
      "flow": "accessCode",
      "scopes": {
        "platform.readonly": "Read access to SCS Schedule Store.",
        "platform": "Read/write access to SCS Schedule Store."
      }
    }
  },
  "definitions": {
    "FruitModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique ID associated for this fruit"
        },
        "name": {
          "type": "string",
          "description": "Name of the fruit"
        },
        "color": {
          "type": "string",
          "description": "Color for the fruit"
        },
        "availability": {
          "type": "integer",
          "description": "Number of fruit available"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "The message that describes the error of the response code."
        }
      }
    }
  },
  "responses": {
    "401": {
      "description": "Unauthorized. The OAuth2 token or scope is invalid.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "404": {
      "description": "Document or path is not found.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "422": {
      "description": "Document validation is failed.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "500": {
      "description": "Process request has failed.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "501": {
      "description": "Not implemented. This is a read-only endpoint.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "502": {
      "description": "Microservice has timeout, please retry.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "GenericError": {
      "description": "An error is occurred.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}